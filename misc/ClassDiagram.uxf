<diagram program="umletino" version="15.1"><zoom_level>9</zoom_level><help_text>Space for diagram notes</help_text><element><id>UMLClass</id><coordinates><x>153</x><y>36</y><w>306</w><h>279</h></coordinates><panel_attributes>&lt;&lt;Data&gt;&gt;
Config
--
- maxPayLoad : unsigned int
- servers : std::map&lt;std::string, Server&gt;
- routes : std::map&lt;std::string, Route&gt;
--
+ Config() 
+ ~Config()
+ Config(const Config&amp; src)
+ operator=(const Config&amp; src) : const Config&amp;

- loadConfig(file : std::fstream &amp;configFileStream) : void

+ getMaxPayload() : unsigned int
+ getServers() :  std::map&lt;std::string, Server&gt;
+ getRoutes() :  std::map&lt;std::string, Routes&gt;

+ setMaxPayload(unsigned int maxPayload) : void
+ setServers(std::map&lt;std::string, Server&gt; servers) : void
+ setRoutes(std::map&lt;std::string, Route&gt; routes) : void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>405</x><y>441</y><w>306</w><h>243</h></coordinates><panel_attributes>&lt;&lt;Data&gt;&gt;
Server
--
- name : std::string
- host : std::string
- port : int
--
+ server() 
+ ~server()
+ server(const Server&amp; src)
+ operator=(const Server&amp; src) : const Server&amp;

+ getName() const : std::string
+ getHost() const :  std::string
+ getPort() const : int

+ setName(const std::string&amp; name) : void
+ setHost(const std::string&amp; host) : void
+ setPort(int port) : void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>0</x><y>441</y><w>306</w><h>243</h></coordinates><panel_attributes>&lt;&lt;Data&gt;&gt;
Route
--
- url : std::string
- methods : std::map&lt;std::string, std::string&gt; 
- files : std::map&lt;std::string, std::string&gt; 
--
+ Route() 
+ ~Route()
+ Route(const Route&amp; src)
+ const Route&amp; operator=(const Route&amp; src)

+ getUrl() : std::string
+ getMethods() : std::map&lt;std::string, std::string&gt;
+ getFiles() : std::map&lt;std::string, std::string&gt;

+ setUrl(const std::string&amp; url) : void
+ setMethods(std::map&lt;std::string, std::string&gt; methods) : void
+ setFiles( std::map&lt;std::string, std::string&gt; files) : void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>18</x><y>1116</y><w>306</w><h>207</h></coordinates><panel_attributes>&lt;&lt;OS Resource&gt;&gt;
Socket
--
- port : unsigned int
- fd : int
--
+ Socket() 
+ ~Socket()
+ Socket(const Socket&amp; src)
+ operator=(const Socket&amp; src) : const Socket&amp;

+ configureSocket() : void
+ getFd() : int
+ getPort() : unsigned int

+ setPort(unsigned int port) : void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1098</x><y>0</y><w>333</w><h>333</h></coordinates><panel_attributes>&lt;&lt;Data&gt;&gt;
HttpRequest
--
- method : std::string
- url : std::string
- version : std::string
- headers : std::multimap&lt;std::string, std::string&gt;
- body : std::string
--
+ HttpRequest() 
+ ~HttpRequest()
+ HttpRequest(const HttpRequest&amp; src)
+ operator=(const HttpRequest&amp; src) : const HttpRequest&amp;

- parseRequestLine() : void
- parseHeaderFields() : void
- parseBody() : void
- trimToken(std::string&amp; str) : void

+ getMethod() const : std::string
+ getUrl() const : std::string
+ getVersion() cons : std::string
+ getHeaders() cons : std::multimap&lt;std::string, std::string&gt;
+ getBody() const : std::string

+ setStream(std::stringstream *request) : void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>720</x><y>0</y><w>333</w><h>333</h></coordinates><panel_attributes>&lt;&lt;Data&gt;&gt;
HttpResponse
--
- version : std::string
- statusCode : std::string
- statusMsg : std::string
- headers : std::multimap&lt;std::string, std::string&gt;
- body : std::string
--
+ HttpResponse() 
+ ~HttpResponse()
+ HttpResponse(const HttpResponse&amp; src)
+ operator=(const HttpResponse&amp; src) : const HttpResponse&amp;

+ getVersion() const : std::string
+ getStatusCode() const : std::string
+ getStatusMsg() const : std::string
+ getHeaders() const : std::multimap&lt;std::string, std::string&gt;
+ getBody() const : std::string

+ setVersion(std::string version) : void
+ setStatusCode(std::string statusCode) : void
+ setStatusMsg(std::string statusMsg) : void
+ addHeader(std::string name, std::string value) : void
+ setBody(std::string body) : void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>18</x><y>837</y><w>306</w><h>243</h></coordinates><panel_attributes>&lt;&lt;Resource Manager&gt;&gt;
SocketManager
--
- socketList : std::list&lt;Socket&gt;
- buffer : std::string
--
+ SocketManager() 
+ ~SocketManager()
- SocketManager(const SocketManager&amp; src)
- operator=(const SocketManager&amp; src) : const SocketManager&amp;

+ monitorSockets() : void
- recieveData() : void
+ sendData(std::string&amp; response) : void
+ addSocket(Socket&amp; socket) : void
+ deleteSocket(Socket&amp; socket) : void
--
Input: DataProcessor -&gt; String
Manages: Socket events, creation, destruction and data</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>504</x><y>981</y><w>306</w><h>207</h></coordinates><panel_attributes>&lt;&lt;Adapter&gt;&gt;
DataProcessor
--
- buffer : std::string
- request : HttpRequest
--
+ DataProcessor() 
+ ~DataProcessor()
- DataProcessor(const DataProcessor&amp; src)
- operator=(const DataProcessor&amp; src) : const DataProcessor&amp;

+ recieveData(std::string&amp; request) : void
- processRequest() : void
+ sendData(HttpResponse&amp; response) : void
--
Input: SocketManager -&gt; String 
Output: String -&gt; FileManager
Manages: Data to http adaptation, logic hub</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>504</x><y>1251</y><w>306</w><h>234</h></coordinates><panel_attributes>&lt;&lt;Resource Manager&gt;&gt;
FileManager
--
- request : HttpRequest
- response : HttpResponse
--
+ FileManager() 
+ ~FileManager()
- FileManager(const FileManager&amp; src)
- operator=(const FileManager&amp; src) : const FileManager&amp;

+ recieveHttpRequest(HttpRequest&amp; request) : void
- processHttpRequest() : void
- searchFile() : bool
- createFile() : bool
- deleteFile() : bool
- controlAccess() : bool
--
Input: DataProcessor -&gt; HttpRequest
Output: HttpResponse -&gt; DataProcessor
Manage statusCode: 200, 403, 404, 405
</panel_attributes><additional_attributes></additional_attributes></element></diagram>